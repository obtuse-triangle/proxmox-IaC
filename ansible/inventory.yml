---

proxmox_hosts:
  hosts:
    sh: # Proxmox 호스트를 식별할 이름
      ansible_host: 10.3.0.1
      ansible_user: root
      ansible_ssh_private_key_file: ~/.ssh/id_rsa

k3s_cluster:
  children:
    server:
      hosts:
        10.3.20.1:
          vmid: 148
          node: sh
    agent:
      hosts:
        10.3.21.1:
          vmid: 147
          node: sh
        10.3.21.2:
          vmid: 149
          node: sh

  # Required Vars
  vars:
    ansible_port: 22
    ansible_user: root
    k3s_version: v1.31.12+k3s1
    # The token should be a random string of reasonable length. You can generate
    # one with the following commands:
    # - openssl rand -base64 64
    # - pwgen -s 64 1
    # You can use ansible-vault to encrypt this value / keep it secret.
    # Or you can omit it if not using Vagrant and let the first server automatically generate one.
    token: "cmb3sD+1/Nzq08r522LajNnxoTZqepZfOMdJL8XkC7TmyB7vAPty4vCY0mxK53KGhdVbjsZmgU+fAM0hpNKl9A=="
    api_endpoint: "{{ hostvars[groups['server'][0]]['ansible_host'] | default(groups['server'][0]) }}"

    # Optional vars
    # extra_server_args: ""
    # extra_agent_args: ""
    # extra_install_envs: { 'INSTALL_K3S_SKIP_SELINUX_RPM': 'true' }
    # cluster_context: k3s-ansible
    # api_port: 6443
    # k3s_server_location: /var/lib/rancher/k3s
    # systemd_dir: /etc/systemd/system
    # extra_service_envs: [ 'ENV_VAR1=VALUE1', 'ENV_VAR2=VALUE2' ]
    # user_kubectl: true, by default kubectl is symlinked and configured for use by ansible_user. Set to false to only kubectl via root user.

    # Manifests or Airgap should be either full paths or relative to the playbook directory.
    # List of locally available manifests to apply to the cluster, useful for PVCs or Traefik modifications.
    # extra_manifests: [ '/path/to/manifest1.yaml', '/path/to/manifest2.yaml' ]
    # airgap_dir: /tmp/k3s-airgap-images

    # server_config_yaml:  |
    #   This is now an inner yaml file. Maintain the indentation.
    #   YAML here will be placed as the content of /etc/rancher/k3s/config.yaml
    #   See https://docs.k3s.io/installation/configuration#configuration-file
    # agent_config_yaml:  |
    #   Same as server_config_yaml, but for the agent nodes.
    #   YAML here will be placed as the content of /etc/rancher/k3s/config.yaml
    #   See https://docs.k3s.io/installation/configuration#configuration-file
    # registries_config_yaml:  |
    #   Containerd can be configured to connect to private registries and use them to pull images as needed by the kubelet.
    #   YAML here will be placed as the content of /etc/rancher/k3s/registries.yaml
    #   See https://docs.k3s.io/installation/private-registry
    k3s_control_node: "k3s-master-1"